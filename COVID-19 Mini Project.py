import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
df = pd.read_excel(r"C:\Users\mafsa\Downloads\covid_mini.xlsx", parse_dates=['date'])
#basic description
print(df.head())
print(df.info())
print(df.describe())
#eda
print(df.isnull().sum())
df.ffill(inplace=True)
print(df)
df_india = df[df['location'] == 'India']
print(df_india.head())
df['total_cases'] = pd.to_numeric(df['total_cases'], errors='coerce')
df['total_deaths'] = pd.to_numeric(df['total_deaths'], errors='coerce')
df['recovered'] = pd.to_numeric(df['recovered'], errors='coerce')
df['new_cases']=pd.to_numeric(df['new_cases'],errors='coerce')
df['people_vaccinated']=pd.to_numeric(df['people_vaccinated'],errors='coerce')
df['active_cases']=df['total_cases']-df['total_deaths']-df['recovered']
print(df)
#visualisation
df = df.dropna(subset=['new_cases', 'total_cases', 'date'])
plt.figure()
plt.plot(df['date'],df['total_cases'],color='red',marker='o')
plt.xticks(rotation=45)
plt.title("Total COVID-19 Cases Over Time")
plt.xlabel("Date")
plt.ylabel("Total Cases")
plt.figure()
plt.plot(df['date'],df['new_cases'],color='blue',marker='o')
plt.title("Daily New COVID-19 Cases Over Time")
plt.xlabel("Date")
plt.ylabel("New Cases")
plt.xticks(rotation=45)
plt.show()
plt.figure()
top5_days = df.sort_values(by='new_cases', ascending=False).head(5)
plt.bar(top5_days['date'],top5_days['new_cases'],color='green')
plt.title("Top 5 Days with Highest New COVID-19 Cases")
plt.xlabel("Date")
plt.ylabel("New Cases")
plt.show()
plt.figure()
latest_cases = df.groupby('location')['total_cases'].max()
top_countries = latest_cases.sort_values(ascending=False).head(5)
plt.pie(top_countries, labels=top_countries.index, autopct='%1.1f%%', startangle=140)
plt.title("Distribution of Total COVID-19 Cases Among Top 5 Countries")
plt.show()
plt.figure()
sns.heatmap(df[['total_cases', 'total_deaths', 'people_vaccinated']].corr(), annot=True, cmap='coolwarm')
plt.title("Correlation Between Total Cases, Deaths, and Vaccinations")
plt.show()
